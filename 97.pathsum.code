/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool pathsum(TreeNode* root, int targetSum ,int sum){
        if(!root->right && !root->left ){
            sum+=root->val;
            if(sum==targetSum)return true;
            else return false;
        }

        if(root->right && root->left){
            sum+=root->val;
            return pathsum(root->left , targetSum, sum) || 
                   pathsum(root->right , targetSum, sum);
        }
        else if(root->right){
            sum+=root->val;
            return pathsum(root->right , targetSum, sum);
        }else{
            sum+=root->val;
            return pathsum(root->left , targetSum, sum);
        }
    }
    bool hasPathSum(TreeNode* root, int targetSum) {
        if(!root)return false;
        return pathsum(root , targetSum ,0 );
    }
};