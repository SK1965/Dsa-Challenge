/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    void reorderList(ListNode* head) {
        if (head == nullptr || head->next == nullptr) return;
         ListNode* fast=head;
         ListNode* slow = head;
         while(fast != nullptr && fast->next != nullptr){
            slow = slow->next;
            fast = fast->next->next;
         }
         ListNode* prev =nullptr;
         ListNode* temp =  slow->next;
         while(temp!=nullptr){
            ListNode* front =temp->next;
            temp->next = prev;
            prev= temp;
            temp = front;
         }
         slow->next=nullptr;
         ListNode* main = head;

         while(prev!=nullptr){
            ListNode* front =main->next;
            ListNode* prevnext = prev->next;
            main->next = prev;
            main = main->next;
            main->next = front;
            main=front;
            prev=prevnext;
         }
        
    }
};