/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<string> routes;
    void paths(TreeNode* root , string str){
        if(!root->left && !root->right){
            routes.push_back(str.append(to_string(root->val)));
        }

        if(root->left && root->right){
            str.append(to_string(root->val)+'-'+'>');
             paths(root->left , str);
             paths(root->right , str);
        }
        else if(root->left){
            str.append(to_string(root->val)+'-'+'>');
            paths(root->left , str);
        }
        else if(root->right){
            str.append(to_string(root->val)+'-'+'>');
            paths(root->right , str);
        }
    }
    vector<string> binaryTreePaths(TreeNode* root) {
        paths(root ,"");
        return routes;
    }
};